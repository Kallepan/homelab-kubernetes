apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: loki
spec:
  project: observability
  source:
    chart: loki
    repoURL: https://grafana.github.io/helm-charts
    targetRevision: 6.*.*
    helm:
      releaseName: loki
      valuesObject:
        global:
          dnsService: coredns
          extraArgs:
            - -config.expand-env=true
          extraEnvFrom:
            - secretRef:
                name: loki-secrets

        chunksCache:
          allocatedMemory: 2048

        loki:
          auth_enabled: false
          commonConfig:
            replication_factor: 1
          schemaConfig:
            configs:
              - from: "2024-04-01"
                store: tsdb
                object_store: s3
                schema: v13
                index:
                  prefix: loki_index_
                  period: 24h
          rulerConfig:
            alertmanager_url: http://prometheus-kube-prometheus-alertmanager.observability.svc.cluster.local:9093
            enable_alertmanager_v2: true
            enable_api: true
            ring:
              kvstore:
                store: inmemory
          ingester:
            chunk_encoding: snappy
          querier:
            # Default is 4, if you have enough memory and CPU you can increase, reduce if OOMing
            max_concurrent: 3
          pattern_ingester:
            enabled: true
          limits_config:
            allow_structured_metadata: true
            volume_enabled: true
            retention_period: 168h # 7 days
            otlp_config:
              resource_attributes:
                attributes_config:
                  - action: index_label
                    regex: service.group
              scope_attributes:
                - action: drop
                  attributes:
                    - method.name
              log_attributes:
                - action: structured_metadata
                  attributes:
                    - user.id
                - action: drop
                  regex: .*
          storage:
            type: s3
            bucketNames:
              chunks: loki-chunks
              ruler: loki-ruler
              admin: loki-admin
            s3:
              # s3 URL can be used to specify the endpoint, access key, secret key, and bucket name this works well for S3 compatible storage or if you are hosting Loki on-premises and want to use S3 as the storage backend. Either use the s3 URL or the individual fields below (AWS endpoint, region, secret).
              s3: https://${LOKI_S3_ACCESS_KEY_ID}:${LOKI_S3_SECRET_ACCESS_KEY}@s3.infra.server.home:9000/loki-chunks
              signatureVersion: "v4"
              region: null
              s3ForcePathStyle: true
              insecure: false
              http_config:
                idle_conn_timeout: 90s
                response_header_timeout: 0s
                insecure_skip_verify: true

        deploymentMode: SimpleScalable

        minio:
          enabled: false

        # Disable Monolithic components
        singleBinary:
          replicas: 0

        # Enable Scalable mode
        backend:
          replicas: 2
          persistence:
            enabled: true
            size: 10Gi
            storageClass: openebs-hostpath
        read:
          replicas: 2
          persistence:
            enabled: true
            size: 10Gi
            storageClass: openebs-hostpath
        write:
          replicas: 2
          persistence:
            enabled: true
            size: 10Gi
            storageClass: openebs-hostpath

        # Disable Microservice components
        ingester:
          replicas: 0
        querier:
          replicas: 0
        queryFrontend:
          replicas: 0
        queryScheduler:
          replicas: 0
        distributor:
          replicas: 0
        compactor:
          replicas: 0
        indexGateway:
          replicas: 0
        bloomCompactor:
          replicas: 0
        bloomGateway:
          replicas: 0
        ruler:
          enabled: true
          replicas: 0

          directories:
            fake:
              # Enable this to test the rule files
              # test.yaml: |
              #   groups:
              #     - name: should_fire
              #       rules:
              #         - alert: HighPercentageError
              #           expr: |
              #             sum(rate({k8s_container_name=~".+"} |= "error" [5m])) by (k8s_container_name)
              #               /
              #             sum(rate({k8s_container_name=~".+"}[5m])) by (k8s_container_name)
              #               > 0.05
              #           for: 10m
              #           labels:
              #               severity: critical
              #           annotations:
              #               summary: High request latency
              high_warn_rate.yaml: |
                groups:
                  - name: high_warn_rate
                    rules:
                      - alert: HighPercentageWarn
                        expr: |
                          sum(rate({k8s_container_name=~".+"} |= "warn" or "warning" [5m])) by (k8s_namespace_name, k8s_pod_name)
                            /
                          sum(rate({k8s_container_name=~".+"}[5m])) by (k8s_namespace_name, k8s_pod_name)
                            > 0.10
                        for: 10m
                        labels:
                          severity: warning
                          namespace: "{{ $labels.k8s_namespace_name }}"
                          pod: "{{ $labels.k8s_pod_name }}"
                          cluster: "{{ $labels.cluster }}"
                          source: "loki"
                        annotations:
                          summary: High percentage of warn logs detected in {{ $labels.k8s_pod_name }}.
                          description: "{{ $labels.k8s_pod_name }} in {{ $labels.k8s_namespace_name }} has a warning rate above 10% over the last 10 minutes."
              high_error_rate.yaml: |
                groups:
                  - name: high_error_rate
                    rules:
                      - alert: HighPercentageError
                        expr: |
                          sum(rate({k8s_container_name=~".+", k8s_pod_name!~"\\S+-postgres-\\d", k8s_namespace_name!="observability"} |= "error" [5m])) by (k8s_namespace_name, k8s_pod_name)
                            /
                          sum(rate({k8s_container_name=~".+"}[5m])) by (k8s_namespace_name, k8s_pod_name)
                            > 0.10
                        for: 10m
                        labels:
                          severity: critical
                          namespace: "{{ $labels.k8s_namespace_name }}"
                          pod: "{{ $labels.k8s_pod_name }}"
                          cluster: "{{ $labels.cluster }}"
                          source: "loki"
                        annotations:
                          summary: High percentage of error logs detected in {{ $labels.k8s_container_name }}.
                          description: "{{ $labels.k8s_pod_name }} in {{ $labels.k8s_namespace_name }} has an error rate above 10% over the last 10 minutes."
                  - name: high_error_rate_postgres
                    rules:
                      - alert: HighPercentageError
                        expr: |
                          sum(rate({k8s_container_name=~".+", k8s_pod_name=~"\\S+-postgres-\\d"} |~ "\"level\":\"error\"" [5m])) by (k8s_namespace_name, k8s_pod_name)
                            /
                          sum(rate({k8s_container_name=~".+"}[5m])) by (k8s_namespace_name, k8s_pod_name)
                            > 0.10
                        for: 10m
                        labels:
                          severity: critical
                          namespace: "{{ $labels.k8s_namespace_name }}"
                          pod: "{{ $labels.k8s_pod_name }}"
                          cluster: "{{ $labels.cluster }}"
                          source: "loki"
                        annotations:
                          summary: High percentage of error logs detected in k8s_container_name {{ $labels.k8s_container_name }}.
                          description: "{{ $labels.k8s_pod_name }} in {{ $labels.k8s_namespace_name }} has an error rate above 10% over the last 10 minutes."
              unauthorized_access_attempts.yaml: |
                groups:
                  - name: UnauthorizedAccessAttempts
                    rules:
                      - alert: UnauthorizedAccessAttempts
                        expr: |
                          sum by(k8s_container_name) (rate({k8s_container_name=~".+"} |= `unauthorized` or `failed login` or `invalid credentials` [1m])) > 2
                        for: 5m
                        labels:
                          severity: critical
                          namespace: "{{ $labels.k8s_namespace_name }}"
                          pod: "{{ $labels.k8s_pod_name }}"
                          cluster: "{{ $labels.cluster }}"
                          source: "loki"
                        annotations:
                          summary: Unauthorized access attempts detected in {{ $labels.k8s_container_name }}
                          description: More than 2 unauthorized access attempts in the last 5 minutes.
              high_log_volume.yaml: |
                groups:
                  - name: HighLogVolume
                    rules:
                      - alert: LogVolumeAnomaly
                        expr: |
                          sum(rate({k8s_container_name=~".+"}[5m])) by (k8s_namespace_name, k8s_pod_name) 
                            > 
                          (sum(rate({k8s_container_name=~".+"}[5m])) by (k8s_namespace_name, k8s_pod_name) * 1.5)
                        for: 10m
                        labels:
                          severity: warning
                          namespace: "{{ $labels.k8s_namespace_name }}"
                          pod: "{{ $labels.k8s_pod_name }}"
                          cluster: "{{ $labels.cluster }}"
                          source: "loki"
                        annotations:
                          summary: Log volume anomaly detected for {{ $labels.k8s_container_name }}
                          description: Unusual increase in log volume detected for {{ $labels.k8s_container_name }} over the last 10 minutes.
  destination:
    server: 'https://kubernetes.default.svc'
    namespace: observability
  syncPolicy:
    automated:
      prune: true
      selfHeal: true


